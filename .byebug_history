continue
bonus = @list.completed? && @list.perfect? ? 1 : 0
@list.perfect?
@list.completed?
@list.perfect_count
continue
Word.find_by(text: "cat")
@list.completed?
@list.complete?
@list.perfect?
@list
continue
self.id
this
continue
exit
@list
exit
@list
exit
Word.where("list_num = #{session[:list_num]} and (guess_count != 1 or correct_guess_count != 1)").count
Word.where("list_num = #{session[:list_num]} and (guess_count != 1 and correct_guess_count != 1)").count
Word.where("list_num = #{session[:list_num]} and guess_count = 1").count
Word.where("list_num = #{session[:list_num]} and guess_count != 1").count
Word.where("list_num = #{session[:list_num]} and correct_guess_count != 1").count
Word.where("list_num = #{session[:list_num]} and correct_guess_count = 1").count
Word.where("list_num = #{session[:list_num]} and correct_guess_count = 1")
Word.where("list_num = #{session[:list_num]}").count
Word.where("list_num = #{session[:list_num]} and guess_count = 1")
Word.where("list_num = #{session[:list_num]} and guess_count = 1)
Word.where("list_num = #{session[:list_num]} and guess_count = 1 and correct_guess_count = 1")
Word.where("list_num = #{session[:list_num]} and correct_guess_count = 1")
Word.where("list_num = #{session[:list_num]} and guess_count = 1").
Word.where("list_num = #{session[:list_num]} and correct_guess_count = 1").count
Word.where("list_num = #{session[:list_num]} and correct_guess_count = 1")
Word.where("list_num = #{session[:list_num]} and guess_count != 1 and correct_guess_count != 1")
Word.where("list_num = #{session[:list_num]} and guess_count = 1 and correct_guess_count = 1").count
Word.where("list_num = #{session[:list_num]} and guess_count != 1 and correct_guess_count != 1").count
Word.where("list_num = #{session[:list_num]}").count
Word.where("list_num = #{session[:list_num]}".count
Word.where("list_num = #{session[:list_num]} and guess_count != 1 and correct_guess_count != 1").count
Word.where("list_num = #{session[:list_num]} and guess_count != 1 and correct_guess_count != 1")
exit
Word.where("guess_count != 1 and correct_guess_count != 1 and list_num = 12";2D;2D;2D)
Word.where("guess_count != 1 and correct_guess_count != 1 and list_num = 12").text
Word.where("guess_count != 1 and correct_guess_count != 1 and list_num = 12").count
Word.where("guess_count != 1 and correct_guess_count != 1 and list_num = 12")
Word.where("guess_count != 1 and correct_guess_count != 1 and list_num = 12)
Word.where(text: "acoustic")
Word.where.not(guess_count: 1, correct_guess_count: 1).count
Word.where.not(guess_count: 1, correct_guess_count: 1, text: "acoustic").count
Word.where.not(guess_count: 1, correct_guess_count: 1, text: "acoustic")
Word.where.not(guess_count: 1, correct_guess_count: 1, :text "acoustic")
Word.where(text: "acoustic")
Word.where.not(guess_count: 1, correct_guess_count: 1).update_all("guess_count = 0, correct_guess_count = 0, streak_type = '', streak_count = 0")
Word.where(text: "acoustic")
Word.where(streak_type: "W")
;
Word.where(streak_type: "W")
Word.where.not(guess_count: 1, correct_guess_count: 1).update_all("guess_count = 0, correct_guess_count = 0, streak_type = '', streak_count = 0")
Word.all.count
Word.where.not(guess_count: 1, correct_guess_count: 1).count
Word.where(guess_count: 1, correct_guess_count: 1).count
Word.where.(guess_count: 1, correct_guess_count: 1).count
Word.where(guess_count: 1, correct_guess_count: 1)
Word.where.(guess_count: 1, correct_guess_count: 1)
Word.all.count
Word.where.not(guess_count: 1, correct_guess_count: 1).count
Word.where.not(guess_count: 1, correct_guess_count: 1)
Word.where(text: "sock")
Word.all
quit
params
exit
params
exit
params
exit
Setting.first
exit
params[:setting]
params
session[:list_num]
exit
session[:list_num]
exit
session[:list_num]
exit
@setting.update_attributes!(params[:setting].permit(:role_ids))
@setting
params
exit
params
exit
Rails.configuration.list_num
Rails.configuration.lits_num
exit
eit
Word.all
exit
candidates.count
index
exit
Word.where(streak_type: "W")
Word.where(streak_type: "W").count
Word.where(streak_type: "C").count
Word.where(streak_type: "C")
Word.all
exit
Word.find_by(text: params[:q])
Word.find_by(text: params[q])
Word.find("bat")
Word.first
guessed_word = Word.find_by(:text, params[:q])
exit
speech.save("hello-de1.mp3")
speech.save("hello-de1.mp3"
speech.methods
speech
exit
bob.save("helloworld.mp3")
bob.save("helloworld.mp3)
bob.save
bob.methods
bob
exit
"#{@word}.mp3"
exit
"{@word}.mp3"
exit
@word
exit
@word.text
@word
exit
params
exit
params
exit
params
quit
exit
